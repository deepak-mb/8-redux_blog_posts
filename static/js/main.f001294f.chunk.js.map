{"version":3,"sources":["components/layout/Navbar.js","components/layout/Footer.js","components/layout/About.js","components/layout/NotFound.js","actions/types.js","actions/postActions.js","components/posts/Post.js","components/posts/Posts.js","components/posts/AddPost.js","components/posts/EditPost.js","reducers/postsReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Footer","About","style","margin","NotFound","url","Post","onClick","_this","props","deletePost","_this$props$post","this","post","title","body","concat","cursor","bind","Component","connect","dispatch","axios","delete","then","res","payload","Posts","getPosts","posts","map","posts_Post","key","state","get","data","AddPost","onChange","e","setState","Object","defineProperty","target","name","value","onSubmit","preventDefault","_this$state","alert","newPost","uuid","userId","addPost","history","push","htmlFor","placeholder","EditPost","updPost","editPost","match","params","getPost","nextProps","nextState","_nextProps$post","_this$state2","put","initialState","combineReducers","arguments","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router","exact","path","component","Boolean","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f001294f.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        Navbar\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item active\">\n            <Link to=\"/\" className=\"nav-link\" href=\"!#\">\n              Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/post/add\" className=\"nav-link\" href=\"!#\">\n              Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\" href=\"!#\">\n              About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <nav className=\"navbar fixed-bottom navbar-dark bg-dark\">\n      <div className=\"navbar-brand\">\n        <p className=\"m-0\">Blog Posts</p>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div className=\"container\" style={{ margin: \"76px auto\" }}>\n      <h1 className=\"display-4 text-danger\">About</h1>\n      <p>This is just a app to learn React and Redux.</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"container\" style={{ margin: \"76px auto\" }}>\n      <h1 className=\"display-4 text-danger\">404!</h1>\n      <p> Page doesnt exist.</p>\n    </div>\n  );\n}\n","export const GET_POSTS = \"GET_POSTS\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const GET_POST = \"GET_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\n","import { GET_POSTS, DELETE_POST, ADD_POST, GET_POST, EDIT_POST } from \"./types\";\nimport axios from \"axios\";\n\n// const url = \"http://localhost:3000/posts\";\nconst url = \"https://jsonplaceholder.typicode.com/posts\";\n\nexport const getPosts = () => dispatch => {\n  axios.get(`${url}`).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  });\n};\n\nexport const deletePost = id => dispatch => {\n  axios.delete(`${url}/${id}`).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n  });\n};\n\nexport const addPost = post => dispatch => {\n  axios.post(`${url}/`, post).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: ADD_POST,\n      payload: post\n    });\n  });\n};\n\nexport const getPost = id => dispatch => {\n  axios.get(`${url}/${id}`).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  });\n};\n\nexport const editPost = post => dispatch => {\n  axios.put(`${url}/${post.id}`, post).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: EDIT_POST,\n      payload: res.data\n    });\n  });\n};\n","import React, { Component } from \"react\";\nimport { deletePost } from \"../../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nclass Post extends Component {\n  onClick = id => {\n    this.props.deletePost(id);\n  };\n  render() {\n    // console.log(this.props.post);\n    const { id, title, body } = this.props.post;\n    return (\n      <div>\n        <div className=\"card my-2\">\n          <div className=\"card-body\">\n            <div className=\"card-title\">{title}</div>\n            <div className=\"card-text\">{body}</div>\n            <div className=\"card-link my-1\">\n              <Link to={`/post/edit/${id}`}>\n                <i\n                  className=\"fas fa-pencil-alt btn btn-primary mx-1\"\n                  style={{ cursor: \"pointer\" }}\n                />\n              </Link>\n              <i\n                to=\"/post/edit/:id\"\n                className=\"fas fa-times btn btn-danger mx-1\"\n                onClick={this.onClick.bind(this, id)}\n                style={{ cursor: \"pointer\" }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  deletePost: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deletePost }\n)(Post);\n","import React, { Component } from \"react\";\nimport { getPosts } from \"../../actions/postActions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Post from \"./Post\";\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.getPosts();\n  }\n  render() {\n    // console.log(this.props.posts);\n    const { posts } = this.props;\n    return (\n      <div className=\"container\" style={{ margin: \"76px auto\" }}>\n        <h1 className=\"display-4 text-danger\">Posts</h1>\n        {posts.map(post => (\n          <Post key={post.id} post={post} />\n        ))}\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n  getPosts: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.posts\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPosts }\n)(Posts);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addPost } from \"../../actions/postActions\";\nimport uuid from \"uuid\";\n\nclass AddPost extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const { title, body } = this.state;\n    if (title === \"\" || body === \"\") {\n      alert(\"Please enter a title and body\");\n    } else {\n      const newPost = {\n        id: uuid(),\n        userId: uuid(),\n        title,\n        body\n      };\n      // console.log(newPost);\n      this.props.addPost(newPost);\n      this.props.history.push(\"/\");\n    }\n  };\n  render() {\n    return (\n      <div className=\"container\" style={{ margin: \" 76px auto\" }}>\n        <h1 className=\"display-4 text-danger\">Add Post</h1>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"title\"\n              placeholder=\"Title\"\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"post\">Post</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"body\"\n              placeholder=\"Post\"\n              onChange={this.onChange}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nAddPost.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addPost }\n)(AddPost);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getPost, editPost } from \"../../actions/postActions\";\n\nclass EditPost extends Component {\n  state = {\n    id: \"\",\n    userId: \"\",\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getPost(id);\n  }\n  componentWillReceiveProps(nextProps, nextState) {\n    // console.log(nextProps.post);\n    const { id, userId, title, body } = nextProps.post;\n    this.setState({ id, userId, title, body });\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const { id, userId, title, body } = this.state;\n    const updPost = {\n      id,\n      userId,\n      title,\n      body\n    };\n    this.props.editPost(updPost);\n    this.props.history.push(\"/\");\n  };\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div className=\"container\" style={{ margin: \" 76px auto\" }}>\n        <h1 className=\"display-4 text-danger\">Edit Post</h1>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"title\"\n              placeholder=\"Title\"\n              onChange={this.onChange}\n              value={title}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"post\">Post</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"body\"\n              placeholder=\"Post\"\n              onChange={this.onChange}\n              value={body}\n            />\n          </div>\n          <input type=\"submit\" className=\"btn btn-success\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nEditPost.propTypes = {\n  post: PropTypes.object.isRequired,\n  getPost: PropTypes.func.isRequired,\n  editPost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.posts.post\n});\n\nexport default connect(\n  mapStateToProps,\n  { getPost, editPost }\n)(EditPost);\n","import {\n  GET_POSTS,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  EDIT_POST\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      // console.log(action.payload)\n      return {\n        ...state,\n        posts: action.payload\n      };\n\n    case GET_POST:\n      // console.log(action.payload)\n      return {\n        ...state,\n        post: action.payload\n      };\n\n    case EDIT_POST:\n      // console.log(action.payload)\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post.id === action.payload.id ? (post = action.payload) : post\n        )\n      };\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post.id !== action.payload)\n      };\n\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [action.payload, ...state.posts]\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport postsReducer from \"./postsReducer\";\n\nexport default combineReducers({\n  posts: postsReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\n// import logo from \"./images/logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// Components\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport About from \"./components/layout/About\";\nimport NotFound from \"./components/layout/NotFound\";\nimport Posts from \"./components/posts/Posts\";\nimport AddPost from \"./components/posts/AddPost\";\nimport EditPost from \"./components/posts/EditPost\";\n\n// Store\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/post/add\" component={AddPost} />\n              <Route exact path=\"/post/edit/:id\" component={EditPost} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}